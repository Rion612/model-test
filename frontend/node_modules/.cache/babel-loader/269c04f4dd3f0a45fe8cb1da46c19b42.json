{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study\\\\Project\\\\model-test\\\\frontend\\\\src\\\\Conatiner\\\\Question\\\\questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../../Components/Layout/Layout';\nimport { useSelector } from 'react-redux';\nimport axios from '../../helpers/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = props => {\n  _s();\n\n  const [modeltests, setModeltests] = useState({});\n  const [error, setError] = useState(\"\");\n  const courses = useSelector(state => state.course.courses);\n  const course = courses.find(x => x._id === modeltests.courseId);\n  useEffect(async () => {\n    try {\n      const res = await axios.get(`/get/model-tests/${props.match.params.slug}`);\n      setModeltests(res.data.modeltest);\n    } catch (err) {\n      setError(\"Something wrong!\");\n    }\n  }, []);\n  const modeltest = modeltests === null || modeltests === void 0 ? void 0 : modeltests.modeltests.find(x => x._id === props.match.params.modelId);\n\n  function capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [capitalize(course === null || course === void 0 ? void 0 : course.courseName), ', ', capitalize(modeltest === null || modeltest === void 0 ? void 0 : modeltest.modelName)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"mi5meREZDdZ+wzeVCHiq5/B7SGo=\", false, function () {\n  return [useSelector];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Study/Project/model-test/frontend/src/Conatiner/Question/questions.js"],"names":["React","useState","useEffect","Layout","useSelector","axios","Question","props","modeltests","setModeltests","error","setError","courses","state","course","find","x","_id","courseId","res","get","match","params","slug","data","modeltest","err","modelId","capitalize","str","charAt","toUpperCase","slice","textAlign","courseName","modelName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMW,OAAO,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaF,OAAvB,CAA3B;AACA,QAAME,MAAM,GAAGF,OAAO,CAACG,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUT,UAAU,CAACU,QAAvC,CAAf;AACAhB,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI;AACA,YAAMiB,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,oBAAmBb,KAAK,CAACc,KAAN,CAAYC,MAAZ,CAAmBC,IAAK,EAAtD,CAAlB;AACAd,MAAAA,aAAa,CAACU,GAAG,CAACK,IAAJ,CAASC,SAAV,CAAb;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVf,MAAAA,QAAQ,CAAC,kBAAD,CAAR;AACH;AACJ,GAPQ,EAON,EAPM,CAAT;AAQA,QAAMc,SAAS,GAAGjB,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEA,UAAZ,CAAuBO,IAAvB,CAA4BC,CAAC,IAAGA,CAAC,CAACC,GAAF,KAAUV,KAAK,CAACc,KAAN,CAAYC,MAAZ,CAAmBK,OAA7D,CAAlB;;AAEA,WAASC,UAAT,CAAoBC,GAApB,EAAyB;AACrB,WAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,KAAJ,CAAU,CAAV,CAArC;AACD;;AACH,sBACI,QAAC,MAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC;AAAX,SAAX;AAAA,mBAAkCL,UAAU,CAACd,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEoB,UAAT,CAA5C,EAAkE,IAAlE,EAAwEN,UAAU,CAACH,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEU,SAAZ,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA5BD;;GAAM7B,Q;UAGcF,W;;;KAHdE,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport Layout from '../../Components/Layout/Layout';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from '../../helpers/axios';\r\n\r\n\r\nconst Question = (props) => {\r\n    const [modeltests, setModeltests] = useState({});\r\n    const [error, setError] = useState(\"\");\r\n    const courses = useSelector(state => state.course.courses);\r\n    const course = courses.find(x => x._id === modeltests.courseId);\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(`/get/model-tests/${props.match.params.slug}`);\r\n            setModeltests(res.data.modeltest);\r\n        } catch (err) {\r\n            setError(\"Something wrong!\");\r\n        }\r\n    }, []);\r\n    const modeltest = modeltests?.modeltests.find(x=> x._id === props.match.params.modelId);\r\n\r\n    function capitalize(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n      }\r\n    return (\r\n        <Layout>\r\n            <div className=\"mainDiv\">\r\n                <h3 style={{textAlign:'center'}}>{capitalize(course?.courseName)}{', '}{capitalize(modeltest?.modelName)}</h3>\r\n            \r\n            </div>\r\n\r\n        </Layout>\r\n        \r\n    );\r\n};\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}