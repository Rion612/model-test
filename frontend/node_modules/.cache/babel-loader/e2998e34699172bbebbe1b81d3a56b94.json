{"ast":null,"code":"import { categoryConstants } from \"../Actions/constants\";\nconst initial_state = {\n  loading: false,\n  categories: [],\n  error: null\n};\n\nconst buildNewCategories = (parentId, categories, category) => {\n  let myCategories = [];\n\n  if (parentId === undefined) {\n    return [...categories, {\n      _id: category._id,\n      name: category.name,\n      slug: category.slug,\n      children: []\n    }];\n  }\n\n  for (let cat of categories) {\n    if (cat._id === parentId) {\n      myCategories.push({ ...cat,\n        children: cat.children ? buildNewCategories(parentId, [...cat.children, {\n          _id: category._id,\n          name: category.name,\n          slug: category.slug,\n          parentId: category.parentId,\n          children: category.children\n        }], category) : []\n      });\n    } else {\n      myCategories.push({ ...cat,\n        children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\n      });\n    }\n  }\n\n  return myCategories;\n};\n\nconst categoryReducers = (state = initial_state, action) => {\n  switch (action.type) {\n    case categoryConstants.GET_CATEGORY_REQUEST:\n      state = { ...initial_state,\n        loading: true\n      };\n      break;\n\n    case categoryConstants.GET_CATEGORY_SUCCESS:\n      state = { ...state,\n        categories: action.payload.categories,\n        loading: false\n      };\n      break;\n\n    case categoryConstants.GET_CATEGORY_FAILURE:\n      state = { ...initial_state,\n        loading: false,\n        message: action.payload.message\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default categoryReducers;","map":{"version":3,"sources":["C:/Study/Project2/online-model-test/frontend/src/Reducers/category.reducers.js"],"names":["categoryConstants","initial_state","loading","categories","error","buildNewCategories","parentId","category","myCategories","undefined","_id","name","slug","children","cat","push","categoryReducers","state","action","type","GET_CATEGORY_REQUEST","GET_CATEGORY_SUCCESS","payload","GET_CATEGORY_FAILURE","message"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,sBAAlC;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE,KADS;AAElBC,EAAAA,UAAU,EAAE,EAFM;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAAtB;;AAMA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWH,UAAX,EAAuBI,QAAvB,KAAoC;AAC3D,MAAIC,YAAY,GAAG,EAAnB;;AAEA,MAAGF,QAAQ,KAAKG,SAAhB,EAA0B;AACtB,WAAO,CACH,GAAGN,UADA,EAEH;AACIO,MAAAA,GAAG,EAAEH,QAAQ,CAACG,GADlB;AAEIC,MAAAA,IAAI,EAAEJ,QAAQ,CAACI,IAFnB;AAGIC,MAAAA,IAAI,EAAEL,QAAQ,CAACK,IAHnB;AAIIC,MAAAA,QAAQ,EAAE;AAJd,KAFG,CAAP;AASH;;AAED,OAAI,IAAIC,GAAR,IAAeX,UAAf,EAA0B;AAEtB,QAAGW,GAAG,CAACJ,GAAJ,KAAYJ,QAAf,EAAwB;AACpBE,MAAAA,YAAY,CAACO,IAAb,CAAkB,EACd,GAAGD,GADW;AAEdD,QAAAA,QAAQ,EAAEC,GAAG,CAACD,QAAJ,GAAeR,kBAAkB,CAACC,QAAD,EAAW,CAAC,GAAGQ,GAAG,CAACD,QAAR,EAAkB;AACpEH,UAAAA,GAAG,EAAEH,QAAQ,CAACG,GADsD;AAEpEC,UAAAA,IAAI,EAAEJ,QAAQ,CAACI,IAFqD;AAGpEC,UAAAA,IAAI,EAAEL,QAAQ,CAACK,IAHqD;AAIpEN,UAAAA,QAAQ,EAAEC,QAAQ,CAACD,QAJiD;AAKpEO,UAAAA,QAAQ,EAAEN,QAAQ,CAACM;AALiD,SAAlB,CAAX,EAMvCN,QANuC,CAAjC,GAMM;AARF,OAAlB;AAUH,KAXD,MAWK;AACDC,MAAAA,YAAY,CAACO,IAAb,CAAkB,EACd,GAAGD,GADW;AAEdD,QAAAA,QAAQ,EAAEC,GAAG,CAACD,QAAJ,GAAeR,kBAAkB,CAACC,QAAD,EAAWQ,GAAG,CAACD,QAAf,EAAyBN,QAAzB,CAAjC,GAAsE;AAFlE,OAAlB;AAIH;AAGJ;;AAGD,SAAOC,YAAP;AACH,CAxCD;;AAyCA,MAAMQ,gBAAgB,GAAG,CAACC,KAAK,GAAChB,aAAP,EAAsBiB,MAAtB,KAAiC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKnB,iBAAiB,CAACoB,oBAAvB;AACIH,MAAAA,KAAK,GAAG,EACJ,GAAGhB,aADC;AAEJC,QAAAA,OAAO,EAAE;AAFL,OAAR;AAIA;;AACJ,SAAKF,iBAAiB,CAACqB,oBAAvB;AACIJ,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJd,QAAAA,UAAU,EAAEe,MAAM,CAACI,OAAP,CAAenB,UAFvB;AAGJD,QAAAA,OAAO,EAAE;AAHL,OAAR;AAKA;;AACJ,SAAKF,iBAAiB,CAACuB,oBAAvB;AACIN,MAAAA,KAAK,GAAG,EACJ,GAAGhB,aADC;AAEJC,QAAAA,OAAO,EAAE,KAFL;AAGJsB,QAAAA,OAAO,EAAEN,MAAM,CAACI,OAAP,CAAeE;AAHpB,OAAR;AAKA;;AACJ;AACI;AAtBR;;AAyBA,SAAOP,KAAP;AAEH,CA5BD;;AA8BA,eAAeD,gBAAf","sourcesContent":["import { categoryConstants } from \"../Actions/constants\"\r\n\r\nconst initial_state = {\r\n    loading: false,\r\n    categories: [],\r\n    error: null\r\n\r\n}\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n    let myCategories = [];\r\n\r\n    if(parentId === undefined){\r\n        return [\r\n            ...categories,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                children: []\r\n            }\r\n        ];\r\n    }\r\n    \r\n    for(let cat of categories){\r\n\r\n        if(cat._id === parentId){\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, [...cat.children, {\r\n                    _id: category._id,\r\n                    name: category.name,\r\n                    slug: category.slug,\r\n                    parentId: category.parentId,\r\n                    children: category.children\r\n                }], category) : []\r\n            });\r\n        }else{\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    return myCategories;\r\n}\r\nconst categoryReducers = (state=initial_state, action) => {\r\n    switch (action.type) {\r\n        case categoryConstants.GET_CATEGORY_REQUEST:\r\n            state = {\r\n                ...initial_state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryConstants.GET_CATEGORY_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categories: action.payload.categories,\r\n                loading: false\r\n            }\r\n            break;\r\n        case categoryConstants.GET_CATEGORY_FAILURE:\r\n            state = {\r\n                ...initial_state,\r\n                loading: false,\r\n                message: action.payload.message\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n\r\n    }\r\n    return state;\r\n\r\n}\r\n\r\nexport default categoryReducers;"]},"metadata":{},"sourceType":"module"}