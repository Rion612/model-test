{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study\\\\Project\\\\model-test\\\\frontend\\\\src\\\\Conatiner\\\\Question\\\\questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Layout from '../../Components/Layout/Layout';\nimport { useSelector } from 'react-redux';\nimport axios from '../../helpers/axios';\nimport { Row, Col, Container, Button, Modal } from 'react-bootstrap';\nimport { BiTime } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = props => {\n  _s();\n\n  var _modeltests$modeltest, _questions$questions;\n\n  const [modeltests, setModeltests] = useState({});\n  const [questions, setQuestions] = useState({});\n  const [error, setError] = useState(\"\");\n  const courses = useSelector(state => state.course.courses);\n  const course = courses.find(x => x._id === (modeltests === null || modeltests === void 0 ? void 0 : modeltests.courseId));\n  const [hour, setHour] = useState(0);\n  const [second, setSecond] = useState(0);\n  const [minute, setMinute] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [correctAnswers, setCorrectAnswer] = useState([]);\n  const [count, setCount] = useState(0);\n  const [show, setShow] = useState(false);\n  const d = new Date();\n  useEffect(async () => {\n    try {\n      const res = await axios.get(`/get/model-tests/${props.match.params.slug}`);\n      setModeltests(res.data.modeltest);\n    } catch (err) {\n      setError(\"Something wrong!\");\n    }\n  }, []);\n  useEffect(async () => {\n    try {\n      const res = await axios.get(`/get/questions/${props.match.params.slug}/${props.match.params.modelId}`);\n      setQuestions(res.data.questions);\n    } catch (err) {\n      setError(\"Something wrong!\");\n    }\n  }, []);\n  const userId = useSelector(state => state.user.user._id);\n  const modeltest = modeltests === null || modeltests === void 0 ? void 0 : (_modeltests$modeltest = modeltests.modeltests) === null || _modeltests$modeltest === void 0 ? void 0 : _modeltests$modeltest.find(x => x._id === props.match.params.modelId);\n\n  const handleShow = async () => {\n    const obj = {\n      userId: userId,\n      modelId: props.match.params.modelId,\n      courseId: course === null || course === void 0 ? void 0 : course._id,\n      mark: count\n    };\n\n    if (modeltests.unitId) {\n      obj.unitId = modeltests.unitId;\n    }\n\n    try {\n      await axios.post(\"/create/results\", obj);\n    } catch (err) {\n      setError(\"Something wrong!\");\n    }\n\n    console.log(obj);\n    setShow(true);\n  };\n\n  function capitalize(str) {\n    return (str === null || str === void 0 ? void 0 : str.charAt(0).toUpperCase()) + (str === null || str === void 0 ? void 0 : str.slice(1));\n  }\n\n  let Interval = useRef();\n\n  const startTimer = () => {\n    const countDowntime = Date.now() + 15000;\n    Interval = setInterval(() => {\n      const now = new Date();\n      const distance = countDowntime - now;\n      const hour = Math.floor(distance / (60 * 60 * 1000));\n      const minute = Math.floor(distance % (60 * 60 * 1000) / (60 * 1000));\n      const s = Math.floor(distance % (60 * 1000) / 1000);\n\n      if (distance < 0) {\n        clearInterval(Interval);\n        handleShow();\n      } else {\n        setSecond(s);\n        setMinute(minute);\n        setHour(hour);\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    startTimer();\n    return () => {\n      clearInterval(Interval.current);\n    };\n  }, []);\n\n  const handleChange = (e, index) => {\n    const value = e.target.value;\n    answers[index] = value;\n\n    if (answers[index] === questions.questions[index].ans) {\n      setCount(count + 1);\n      correctAnswers[index] = 1;\n    } else {\n      correctAnswers[index] = 0;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [(modeltest === null || modeltest === void 0 ? void 0 : modeltest.modelName) ? capitalize(modeltest === null || modeltest === void 0 ? void 0 : modeltest.modelName) + ', ' : null, (course === null || course === void 0 ? void 0 : course.courseName) ? capitalize(course === null || course === void 0 ? void 0 : course.courseName) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(BiTime, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 62\n              }, this), \" Time:\", hour, \" : \", minute, \" : \", second]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"text-right\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '20px'\n              },\n              children: \"Total marks: 100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), questions === null || questions === void 0 ? void 0 : (_questions$questions = questions.questions) === null || _questions$questions === void 0 ? void 0 : _questions$questions.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [index + 1, \" \", item.ques]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 46\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-check-input\",\n                    type: \"radio\",\n                    name: \"radio-\" + index,\n                    value: item.optionA,\n                    onChange: e => handleChange(e, index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    children: [\"A. \", item.optionA]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 45\n                }, this)\n              }, item.optionA + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-check-input\",\n                    type: \"radio\",\n                    name: \"radio-\" + index,\n                    value: item.optionB,\n                    onChange: e => handleChange(e, index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    children: [\"B. \", item.optionB]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 45\n                }, this)\n              }, item.optionB + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-check-input\",\n                    type: \"radio\",\n                    name: \"radio-\" + index,\n                    value: item.optionC,\n                    onChange: e => handleChange(e, index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    children: [\"C. \", item.optionC]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 45\n                }, this)\n              }, item.optionC + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-check-input\",\n                    type: \"radio\",\n                    name: \"radio-\" + index,\n                    value: item.optionD,\n                    onChange: e => handleChange(e, index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    children: [\"D. \", item.optionD]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 45\n                }, this)\n              }, item.optionD + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          size: \"lg\",\n          block: true,\n          style: {\n            marginTop: '40px'\n          },\n          onClick: () => handleShow(answers),\n          children: \"Finish exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      style: {\n        marginTop: '200px'\n      },\n      animation: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Your exam has finished!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: '/all/model-tests/result',\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            style: {\n              marginRight: '180px'\n            },\n            children: \"View Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"TlNYey/uF1jklklAps/C3+mMKrI=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Study/Project/model-test/frontend/src/Conatiner/Question/questions.js"],"names":["React","useState","useEffect","useRef","Layout","useSelector","axios","Row","Col","Container","Button","Modal","BiTime","Link","Question","props","modeltests","setModeltests","questions","setQuestions","error","setError","courses","state","course","find","x","_id","courseId","hour","setHour","second","setSecond","minute","setMinute","answers","setAnswers","correctAnswers","setCorrectAnswer","count","setCount","show","setShow","d","Date","res","get","match","params","slug","data","modeltest","err","modelId","userId","user","handleShow","obj","mark","unitId","post","console","log","capitalize","str","charAt","toUpperCase","slice","Interval","startTimer","countDowntime","now","setInterval","distance","Math","floor","s","clearInterval","current","handleChange","e","index","value","target","ans","textAlign","modelName","courseName","fontSize","map","item","ques","optionA","optionB","optionC","optionD","marginTop","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Layout from '../../Components/Layout/Layout';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from '../../helpers/axios';\r\nimport { Row, Col, Container, Button, Modal } from 'react-bootstrap';\r\nimport { BiTime } from 'react-icons/bi'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Question = (props) => {\r\n    const [modeltests, setModeltests] = useState({});\r\n    const [questions, setQuestions] = useState({});\r\n    const [error, setError] = useState(\"\");\r\n    const courses = useSelector(state => state.course.courses);\r\n    const course = courses.find(x => x._id === modeltests?.courseId);\r\n    const [hour, setHour] = useState(0);\r\n    const [second, setSecond] = useState(0);\r\n    const [minute, setMinute] = useState(0);\r\n    const [answers, setAnswers] = useState([]);\r\n    const [correctAnswers, setCorrectAnswer] = useState([]);\r\n    const [count, setCount] = useState(0);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    \r\n\r\n    const d = new Date();\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(`/get/model-tests/${props.match.params.slug}`);\r\n            setModeltests(res.data.modeltest);\r\n        } catch (err) {\r\n            setError(\"Something wrong!\");\r\n        }\r\n    }, []);\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(`/get/questions/${props.match.params.slug}/${props.match.params.modelId}`);\r\n\r\n            setQuestions(res.data.questions);\r\n        } catch (err) {\r\n            setError(\"Something wrong!\");\r\n        }\r\n    }, []);\r\n\r\n    \r\n    const userId = useSelector(state=>state.user.user._id); \r\n    const modeltest = modeltests?.modeltests?.find(x => x._id === props.match.params.modelId);\r\n\r\n    const handleShow = async() => {\r\n        const obj={\r\n            userId : userId,\r\n            modelId : props.match.params.modelId,\r\n            courseId : course?._id,\r\n            mark : count\r\n        }\r\n        if(modeltests.unitId){\r\n            obj.unitId = modeltests.unitId\r\n        }\r\n        try {\r\n            await axios.post(\"/create/results\",obj);\r\n        } catch (err) {\r\n            setError(\"Something wrong!\");\r\n        }\r\n        console.log(obj);\r\n\r\n        setShow(true);\r\n    };\r\n\r\n    function capitalize(str) {\r\n        return str?.charAt(0).toUpperCase() + str?.slice(1);\r\n    }\r\n    let Interval = useRef();\r\n    const startTimer = () => {\r\n        const countDowntime = Date.now() + 15000;\r\n        Interval = setInterval(() => {\r\n            const now = new Date();\r\n            const distance = countDowntime - now;\r\n\r\n            const hour = Math.floor(distance / (60 * 60 * 1000));\r\n\r\n            const minute = Math.floor((distance % (60 * 60 * 1000)) / (60 * 1000));\r\n\r\n            const s = Math.floor((distance % (60 * 1000)) / 1000);\r\n\r\n            if (distance < 0) {\r\n\r\n                clearInterval(Interval);\r\n                handleShow();\r\n            }\r\n            else {\r\n                setSecond(s);\r\n                setMinute(minute);\r\n                setHour(hour);\r\n            }\r\n\r\n        }, 1000)\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n        startTimer();\r\n        return () => {\r\n            clearInterval(Interval.current);\r\n        }\r\n    }, [])\r\n    const handleChange = (e, index) => {\r\n        const value = e.target.value;\r\n        answers[index] = value;\r\n        if (answers[index] === questions.questions[index].ans) {\r\n            setCount(count + 1)\r\n            correctAnswers[index] = 1;\r\n\r\n        }\r\n        else {\r\n            correctAnswers[index] = 0;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"mainDiv\">\r\n                <Container>\r\n                    <h3 style={{ textAlign: 'center' }}>\r\n                        {modeltest?.modelName ? capitalize(modeltest?.modelName) + ', ' : null}{course?.courseName ? capitalize(course?.courseName) : null}\r\n                    </h3>\r\n                    <Row >\r\n                        <Col><p style={{ fontSize: '20px' }}><BiTime /> Time:{hour} : {minute} : {second}</p></Col>\r\n                        <Col className=\"text-right\"><p style={{ fontSize: '20px' }}>Total marks: 100</p></Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <Container>\r\n                    <hr />\r\n                    {\r\n                        questions?.questions?.map((item, index) => {\r\n                            return (\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col><p>{index + 1} {item.ques}</p></Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col key={item.optionA + index}>\r\n                                            <div className=\"form-check\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name={\"radio-\" + index} value={item.optionA} onChange={(e) => handleChange(e, index)} />\r\n                                                <label className=\"form-check-label\">A. {item.optionA}</label>\r\n\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col key={item.optionB + index}>\r\n                                            <div className=\"form-check\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name={\"radio-\" + index} value={item.optionB} onChange={(e) => handleChange(e, index)} />\r\n                                                <label className=\"form-check-label\">B. {item.optionB}</label>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col key={item.optionC + index}>\r\n                                            <div className=\"form-check\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name={\"radio-\" + index} value={item.optionC} onChange={(e) => handleChange(e, index)} />\r\n                                                <label className=\"form-check-label\">C. {item.optionC}</label>\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col key={item.optionD + index}>\r\n                                            <div className=\"form-check\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name={\"radio-\" + index} value={item.optionD} onChange={(e) => handleChange(e, index)} />\r\n                                                <label className=\"form-check-label\">D. {item.optionD}</label>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </div>\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        size=\"lg\"\r\n                        block\r\n                        style={{ marginTop: '40px' }}\r\n                        onClick={() => handleShow(answers)}\r\n                    >\r\n                        Finish exam\r\n                    </Button>\r\n                </Container>\r\n\r\n            </div>\r\n            <Modal show={show} style={{ marginTop: '200px' }} animation={false}>\r\n                <Modal.Body>Your exam has finished!\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Link to={'/all/model-tests/result'}>\r\n                        <Button variant=\"success\" style={{ marginRight: '180px' }}>\r\n                            View Result\r\n                        </Button>\r\n                    </Link>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Layout>\r\n\r\n    );\r\n};\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}