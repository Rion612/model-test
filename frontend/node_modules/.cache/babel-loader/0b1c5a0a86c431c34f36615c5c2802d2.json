{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { userConstants } from \"./constants\";\nexport const userSignIn = form => {\n  return async dispatch => {\n    dispatch({\n      type: userConstants.USER_LOGIN_REQUEST\n    });\n    await axios.post('/user/signin', form).then(res => {\n      if (res.status === 200) {\n        const token = res.data.token;\n        const user = res.data.user;\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        dispatch({\n          type: userConstants.USER_LOGIN_SUCCESS,\n          payload: {\n            token,\n            user\n          }\n        });\n      } else {\n        dispatch({\n          type: userConstants.USER_LOGIN_FAILURE,\n          payload: {\n            message: res.data.message\n          }\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: userConstants.USER_LOGIN_FAILURE,\n        payload: {\n          message: \"something wrong!\"\n        }\n      });\n    });\n  };\n};\n/*\r\nexport const editHelmetBrand = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: helemtbrandConstants.EDIT_HELMET_BRAND_REQUEST });\r\n\r\n\r\n        await axios.post('/edit/helmet/brand', form)\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n\r\n                    dispatch({\r\n                        type: helemtbrandConstants.EDIT_HELMET_BRAND_SUCCESS,\r\n                        payload: {\r\n                            helmetBrand: res.data.helmetbrand\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: helemtbrandConstants.EDIT_HELMET_BRAND_FAILURE,\r\n                        payload: {\r\n                            message: res.data.message\r\n                        }\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                dispatch({\r\n                    type: helemtbrandConstants.EDIT_HELMET_BRAND_FAILURE,\r\n                    payload: {\r\n                        error,\r\n                        message: \"Something happend wrong!\"\r\n                    }\r\n                })\r\n\r\n            });\r\n    }\r\n}\r\nexport const deleteHelmetBrand = (item) => {\r\n    return async dispatch => {\r\n        dispatch({ type: helemtbrandConstants.DEL_HELMET_BRAND_REQUEST });\r\n\r\n        await axios.post('/delete/helmet/brand', item)\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n\r\n                    dispatch({\r\n                        type: helemtbrandConstants.DEL_HELMET_BRAND_SUCCESS,\r\n                        payload: {\r\n                            message: res.data.message,\r\n                            id: item._id\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: helemtbrandConstants.DEL_HELMET_BRAND_FAILURE,\r\n                        payload: {\r\n                            message: res.data.message\r\n                        }\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                dispatch({\r\n                    type: helemtbrandConstants.DEL_HELMET_BRAND_FAILURE,\r\n                    payload: {\r\n                        error,\r\n                        message: \"Something happend wrong!\"\r\n                    }\r\n                })\r\n\r\n            });\r\n    }\r\n}\r\nexport const createHelmetBrand = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: helemtbrandConstants.ADD_HELMET_BRAND_REQUEST });\r\n\r\n        await axios.post('/create/helmet/brand', form)\r\n            .then((res) => {\r\n                if (res.status === 201) {\r\n\r\n                    dispatch({\r\n                        type:helemtbrandConstants.ADD_HELMET_BRAND_SUCCESS,\r\n                        payload:{\r\n                            helmetbrands:res.data.helmetbrands\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type:helemtbrandConstants.ADD_HELMET_BRAND_FAILURE,\r\n                        payload:{\r\n                            message:res.data.message\r\n                        }\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                dispatch({\r\n                    type:helemtbrandConstants.ADD_HELMET_BRAND_FAILURE,\r\n                    payload:{\r\n                        message :\"Something happend wrong!\"\r\n                    }\r\n                })\r\n\r\n            });\r\n\r\n    }\r\n}*/","map":{"version":3,"sources":["C:/Study/Project2/online-model-test/frontend/src/Actions/user.actions.js"],"names":["axios","userConstants","userSignIn","form","dispatch","type","USER_LOGIN_REQUEST","post","then","res","status","token","data","user","localStorage","setItem","JSON","stringify","USER_LOGIN_SUCCESS","payload","USER_LOGIN_FAILURE","message","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAChC,SAAO,MAAMC,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,aAAa,CAACK;AAAtB,KAAD,CAAR;AAGA,UAAMN,KAAK,CAACO,IAAN,CAAW,cAAX,EAA2BJ,IAA3B,EACDK,IADC,CACKC,GAAD,IAAS;AACX,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,cAAMC,KAAK,GAAGF,GAAG,CAACG,IAAJ,CAASD,KAAvB;AACA,cAAME,IAAI,GAAGJ,GAAG,CAACG,IAAJ,CAASC,IAAtB;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,KAA9B;AACAG,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA7B;AAEAT,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEJ,aAAa,CAACiB,kBADf;AAELC,UAAAA,OAAO,EAAE;AACLR,YAAAA,KADK;AAELE,YAAAA;AAFK;AAFJ,SAAD,CAAR;AAOH,OAbD,MAcK;AACDT,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEJ,aAAa,CAACmB,kBADf;AAELD,UAAAA,OAAO,EAAE;AACLE,YAAAA,OAAO,EAAEZ,GAAG,CAACG,IAAJ,CAASS;AADb;AAFJ,SAAD,CAAR;AAMH;AAEJ,KAzBC,EA0BDC,KA1BC,CA0BMC,KAAD,IAAW;AACdnB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEJ,aAAa,CAACmB,kBADf;AAELD,QAAAA,OAAO,EAAE;AACLE,UAAAA,OAAO,EAAE;AADJ;AAFJ,OAAD,CAAR;AAOH,KAlCC,CAAN;AAmCH,GAvCD;AAwCH,CAzsourcesContent":["import axios from \"../helpers/axios\";\r\nimport { userConstants } from \"./constants\";\r\n\r\nexport const userSignIn = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: userConstants.USER_LOGIN_REQUEST });\r\n\r\n\r\n        await axios.post('/user/signin', form)\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    const token = res.data.token;\r\n                    const user = res.data.user;\r\n                    localStorage.setItem('token', token);\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n\r\n                    dispatch({\r\n                        type: userConstants.USER_LOGIN_SUCCESS,\r\n                        payload: {\r\n                            token,\r\n                            user\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: userConstants.USER_LOGIN_FAILURE,\r\n                        payload: {\r\n                            message: res.data.message\r\n                        }\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                dispatch({\r\n                    type: userConstants.USER_LOGIN_FAILURE,\r\n                    payload: {\r\n                        message: \"something wrong!\"\r\n                    }\r\n                })\r\n\r\n            });\r\n    }\r\n}\r\n\r\n\r\n/*\r\nexport const editHelmetBrand = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: helemtbrandConstants.EDIT_HELMET_BRAND_REQUEST });\r\n\r\n\r\n        await axios.post('/edit/helmet/brand', form)\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n\r\n                    dispatch({\r\n                        type: helemtbrandConstants.EDIT_HELMET_BRAND_SUCCESS,\r\n                        payload: {\r\n                            helmetBrand: res.data.helmetbrand\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: helemtbrandConstants.EDIT_HELMET_BRAND_FAILURE,\r\n                        payload: {\r\n                            message: res.data.message\r\n                        }\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                dispatch({\r\n                    type: helemtbrandConstants.EDIT_HELMET_BRAND_FAILURE,\r\n                    payload: {\r\n                        error,\r\n                        message: \"Something happend wrong!\"\r\n                    }\r\n                })\r\n\r\n            });\r\n    }\r\n}\r\nexport const deleteHelmetBrand = (item) => {\r\n    return async dispatch => {\r\n        dispatch({ type: helemtbrandConstants.DEL_HELMET_BRAND_REQUEST });\r\n\r\n        await axios.post('/delete/helmet/brand', item)\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n\r\n                    dispatch({\r\n                        type: helemtbrandConstants.DEL_HELMET_BRAND_SUCCESS,\r\n                        payload: {\r\n                            message: res.data.message,\r\n                            id: item._id\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: helemtbrandConstants.DEL_HELMET_BRAND_FAILURE,\r\n                        payload: {\r\n                            message: res.data.message\r\n                        }\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                dispatch({\r\n                    type: helemtbrandConstants.DEL_HELMET_BRAND_FAILURE,\r\n                    payload: {\r\n                        error,\r\n                        message: \"Something happend wrong!\"\r\n                    }\r\n                })\r\n\r\n            });\r\n    }\r\n}\r\nexport const createHelmetBrand = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: helemtbrandConstants.ADD_HELMET_BRAND_REQUEST });\r\n\r\n        await axios.post('/create/helmet/brand', form)\r\n            .then((res) => {\r\n                if (res.status === 201) {\r\n\r\n                    dispatch({\r\n                        type:helemtbrandConstants.ADD_HELMET_BRAND_SUCCESS,\r\n                        payload:{\r\n                            helmetbrands:res.data.helmetbrands\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type:helemtbrandConstants.ADD_HELMET_BRAND_FAILURE,\r\n                        payload:{\r\n                            message:res.data.message\r\n                        }\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                dispatch({\r\n                    type:helemtbrandConstants.ADD_HELMET_BRAND_FAILURE,\r\n                    payload:{\r\n                        message :\"Something happend wrong!\"\r\n                    }\r\n                })\r\n\r\n            });\r\n\r\n    }\r\n}*/\r\n"]},"metadata":{},"sourceType":"module"}