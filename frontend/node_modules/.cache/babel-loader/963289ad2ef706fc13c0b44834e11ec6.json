{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study\\\\Project\\\\model-test\\\\frontend\\\\src\\\\Conatiner\\\\ModelTestUnit\\\\modeltest.unit.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Card, Button, Row, Col } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport Layout from '../../Components/Layout/Layout';\nimport axios from '../../helpers/axios';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModeltestUnit = props => {\n  _s();\n\n  var _modeltests$modeltest;\n\n  const [modeltests, setModeltests] = useState({});\n  const [error, setError] = useState(\"\");\n  const courses = useSelector(state => state.course.courses);\n  const course = courses.find(x => x._id === modeltests.courseId);\n  useEffect(async () => {\n    try {\n      const res = await axios.get(`/get/model-tests/${props.match.params.slug}/${props.match.params.unitId}`);\n      setModeltests(res.data.modeltest);\n    } catch (err) {\n      setError(\"Something wrong!\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"All the model tests :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: modeltests === null || modeltests === void 0 ? void 0 : (_modeltests$modeltest = modeltests.modeltests) === null || _modeltests$modeltest === void 0 ? void 0 : _modeltests$modeltest.map((item, index) => {\n            var _course$courseName;\n\n            return /*#__PURE__*/_jsxDEV(Col, {\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  className: \"font-weight-bold\",\n                  children: course === null || course === void 0 ? void 0 : (_course$courseName = course.courseName) === null || _course$courseName === void 0 ? void 0 : _course$courseName.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: item.status === \"available\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: item === null || item === void 0 ? void 0 : item.modelName.toUpperCase()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 35,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"primary\",\n                      children: \"Start Exam\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 37,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 53\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: [item === null || item === void 0 ? void 0 : item.modelName.toUpperCase(), ' ', /*#__PURE__*/_jsxDEV(Badge, {\n                        variant: \"danger\",\n                        children: \"Not available\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 44,\n                        columnNumber: 66\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 43,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"primary\",\n                      disabled: true,\n                      children: \"Start Exam\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModeltestUnit, \"mi5meREZDdZ+wzeVCHiq5/B7SGo=\", false, function () {\n  return [useSelector];\n});\n\n_c = ModeltestUnit;\nexport default ModeltestUnit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModeltestUnit\");","map":{"version":3,"sources":["C:/Study/Project/model-test/frontend/src/Conatiner/ModelTestUnit/modeltest.unit.js"],"names":["Container","Card","Button","Row","Col","React","useEffect","useState","Layout","axios","useSelector","ModeltestUnit","props","modeltests","setModeltests","error","setError","courses","state","course","find","x","_id","courseId","res","get","match","params","slug","unitId","data","modeltest","err","map","item","index","courseName","toUpperCase","status","modelName"],"mappings":"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","sourcesContent":["import { Container, Card, Button, Row, Col } from 'react-bootstrap';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Layout from '../../Components/Layout/Layout';\r\nimport axios from '../../helpers/axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ModeltestUnit = (props) => {\r\n    const [modeltests, setModeltests] = useState({});\r\n    const [error, setError] = useState(\"\");\r\n    const courses = useSelector(state => state.course.courses);\r\n    const course = courses.find(x => x._id === modeltests.courseId);\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(`/get/model-tests/${props.match.params.slug}/${props.match.params.unitId}`);\r\n            setModeltests(res.data.modeltest);\r\n        } catch (err) {\r\n            setError(\"Something wrong!\");\r\n        }\r\n    }, []);\r\n    return (\r\n        <Layout>\r\n            <div className=\"mainDiv\">\r\n                <Container>\r\n                    <h1>All the model tests :</h1>\r\n                    <Row>\r\n                        {modeltests?.modeltests?.map((item, index) => {\r\n                            return (\r\n                                <Col key={index} md={4}>\r\n                                    <Card>\r\n                                        <Card.Header className=\"font-weight-bold\">{(course?.courseName)?.toUpperCase()}</Card.Header>\r\n                                        <Card.Body>\r\n                                            {\r\n                                                item.status === \"available\" ?\r\n                                                    <div>\r\n                                                        <Card.Text>{item?.modelName.toUpperCase()}\r\n                                                        </Card.Text>\r\n                                                        <Button variant=\"primary\">Start Exam</Button>\r\n\r\n                                                    </div>\r\n\r\n                                                    :\r\n                                                    <div>\r\n                                                        <Card.Text>{item?.modelName.toUpperCase()}\r\n                                                            {' '}<Badge variant=\"danger\">Not available</Badge>\r\n                                                        </Card.Text>\r\n                                                        <Button variant=\"primary\" disabled>Start Exam</Button>\r\n\r\n                                                    </div>\r\n\r\n\r\n                                            }\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                            )\r\n                        })\r\n                        }\r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n\r\n        </Layout>\r\n\r\n    );\r\n};\r\n\r\nexport default ModeltestUnit;"]},"metadata":{},"sourceType":"module"}