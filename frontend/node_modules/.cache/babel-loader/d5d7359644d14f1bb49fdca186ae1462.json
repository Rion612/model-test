{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study\\\\Project\\\\model-test\\\\frontend\\\\src\\\\Conatiner\\\\Question\\\\questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Layout from '../../Components/Layout/Layout';\nimport { useSelector } from 'react-redux';\nimport axios from '../../helpers/axios';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { BiTime } from 'react-icons/bi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = props => {\n  _s();\n\n  var _modeltests$modeltest;\n\n  const [modeltests, setModeltests] = useState({});\n  const [error, setError] = useState(\"\");\n  const courses = useSelector(state => state.course.courses);\n  const course = courses.find(x => x._id === modeltests.courseId);\n  const [hour, setHour] = useState('00');\n  const [second, setSecond] = useState('00');\n  const [minute, setMinute] = useState('00');\n  const d = new Date();\n  useEffect(async () => {\n    try {\n      const res = await axios.get(`/get/model-tests/${props.match.params.slug}`);\n      setModeltests(res.data.modeltest);\n    } catch (err) {\n      setError(\"Something wrong!\");\n    }\n  }, []);\n  const modeltest = (_modeltests$modeltest = modeltests.modeltests) === null || _modeltests$modeltest === void 0 ? void 0 : _modeltests$modeltest.find(x => x._id === props.match.params.modelId);\n\n  function capitalize(str) {\n    return (str === null || str === void 0 ? void 0 : str.charAt(0).toUpperCase()) + (str === null || str === void 0 ? void 0 : str.slice(1));\n  }\n\n  let Interval = useRef();\n\n  const startTimer = () => {\n    const countDowntime = Date.now() + 5400000;\n    Interval = setInterval(() => {\n      const now = new Date();\n      const distance = countDowntime - now;\n      const hour = Math.floor(distance / (60 * 60 * 1000));\n      distance = Math.floor(distance % (hour * 3600000));\n      const minute = Math.floor(distance / (60 * 1000));\n      const s = Math.floor(distance % (minute * (60 * 1000)));\n\n      if (distance < 0) {\n        window.alert('Exam finished !');\n        clearInterval(Interval.current);\n      } else {\n        setSecond(s);\n        setMinute(minute);\n        setHour(hour);\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    startTimer();\n    return () => {\n      clearInterval(Interval.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [(modeltest === null || modeltest === void 0 ? void 0 : modeltest.modelName) ? capitalize(modeltest === null || modeltest === void 0 ? void 0 : modeltest.modelName) + ', ' : null, (course === null || course === void 0 ? void 0 : course.courseName) ? capitalize(course === null || course === void 0 ? void 0 : course.courseName) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(BiTime, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 55\n              }, this), \" Time:\", hour, \" : \", minute, \" : \", second, \"}\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"text-right\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '20px'\n              },\n              children: \"Total marks: 100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"OaJGislZXIMA4FBlDNN5QoCeKf0=\", false, function () {\n  return [useSelector];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Study/Project/model-test/frontend/src/Conatiner/Question/questions.js"],"names":["React","useState","useEffect","useRef","Layout","useSelector","axios","Row","Col","Container","BiTime","Question","props","modeltests","setModeltests","error","setError","courses","state","course","find","x","_id","courseId","hour","setHour","second","setSecond","minute","setMinute","d","Date","res","get","match","params","slug","data","modeltest","err","modelId","capitalize","str","charAt","toUpperCase","slice","Interval","startTimer","countDowntime","now","setInterval","distance","Math","floor","s","window","alert","clearInterval","current","textAlign","modelName","courseName","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Layout from '../../Components/Layout/Layout';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from '../../helpers/axios';\r\nimport {Row,Col, Container} from 'react-bootstrap';\r\nimport { BiTime } from 'react-icons/bi'\r\n\r\n\r\n\r\nconst Question = (props) => {\r\n    const [modeltests, setModeltests] = useState({});\r\n    const [error, setError] = useState(\"\");\r\n    const courses = useSelector(state => state.course.courses);\r\n    const course = courses.find(x => x._id === modeltests.courseId);\r\n    const [hour,setHour] = useState('00');\r\n    const [second,setSecond] = useState('00');\r\n    const [minute,setMinute] = useState('00');\r\n    const d = new Date();\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(`/get/model-tests/${props.match.params.slug}`);\r\n            setModeltests(res.data.modeltest);\r\n        } catch (err) {\r\n            setError(\"Something wrong!\");\r\n        }\r\n    }, []);\r\n    const modeltest = modeltests.modeltests?.find(x => x._id === props.match.params.modelId);\r\n\r\n    function capitalize(str) {\r\n        return str?.charAt(0).toUpperCase() + str?.slice(1);\r\n    }\r\n    let Interval = useRef();\r\n    const startTimer = ()=>{\r\n        const countDowntime = Date.now() + 5400000;\r\n        Interval  = setInterval(()=>{\r\n            const now = new Date();\r\n            const distance = countDowntime - now;\r\n\r\n            const hour =Math.floor(distance / (60*60* 1000));\r\n            distance = Math.floor(distance % (hour*3600000));\r\n\r\n            const minute = Math.floor(distance / (60*1000));\r\n\r\n            const s = Math.floor(distance % (minute*(60*1000)));\r\n\r\n            if(distance < 0)\r\n            {\r\n                window.alert('Exam finished !');\r\n                clearInterval(Interval.current);\r\n            }\r\n            else{\r\n                setSecond(s);\r\n                setMinute(minute);\r\n                setHour(hour);\r\n            }\r\n\r\n        },1000)\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n        startTimer();\r\n        return () => {\r\n            clearInterval(Interval.current);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"mainDiv\">\r\n                <Container>\r\n                <h3 style={{ textAlign: 'center' }}>\r\n                {modeltest?.modelName ? capitalize(modeltest?.modelName) +', ': null}{course?.courseName ? capitalize(course?.courseName) : null}\r\n                </h3>\r\n                <Row>\r\n                    <Col><p style={{fontSize:'20px'}}><BiTime/> Time:{hour} : {minute} : {second}}</p></Col>\r\n                    <Col className=\"text-right\"><p style={{fontSize:'20px'}}>Total marks: 100</p></Col>\r\n                </Row>\r\n                <hr/>\r\n                </Container>\r\n\r\n            </div>\r\n\r\n        </Layout>\r\n\r\n    );\r\n};\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}