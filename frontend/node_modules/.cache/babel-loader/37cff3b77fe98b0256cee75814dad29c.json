{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study\\\\Project\\\\model-test\\\\frontend\\\\src\\\\Conatiner\\\\ModelTest\\\\modeltest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Layout from '../../Components/Layout/Layout';\nimport { Container, Card, Row, Col, Button } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModelTest = props => {\n  _s();\n\n  var _modeltests$modeltest;\n\n  const [modeltests, setModeltests] = useState({});\n  const [error, setError] = useState(\"\");\n  const courses = useSelector(state => state.course.courses);\n  const course = courses.find(x => x._id === modeltests.courseId);\n  useEffect(async () => {\n    try {\n      const res = await axios.get(`/get/model-tests/${props.match.params.slug}`);\n      setModeltests(res.data.modeltest);\n    } catch (err) {\n      setError(\"Something wrong!\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"All the model tests :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: modeltests === null || modeltests === void 0 ? void 0 : (_modeltests$modeltest = modeltests.modeltests) === null || _modeltests$modeltest === void 0 ? void 0 : _modeltests$modeltest.map((item, index) => {\n            var _course$courseName;\n\n            return /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  className: \"font-weight-bold\",\n                  children: course === null || course === void 0 ? void 0 : (_course$courseName = course.courseName) === null || _course$courseName === void 0 ? void 0 : _course$courseName.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                    children: item.modelName.toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 31,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    children: \"Start Exam\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModelTest, \"mi5meREZDdZ+wzeVCHiq5/B7SGo=\", false, function () {\n  return [useSelector];\n});\n\n_c = ModelTest;\nexport default ModelTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModelTest\");","map":{"version":3,"sources":["C:/Study/Project/model-test/frontend/src/Conatiner/ModelTest/modeltest.js"],"names":["React","useState","Layout","Container","Card","Row","Col","Button","useSelector","ModelTest","props","modeltests","setModeltests","error","setError","courses","state","course","find","x","_id","courseId","useEffect","res","axios","get","match","params","slug","data","modeltest","err","map","item","index","courseName","toUpperCase","modelName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,SAAT,EAAmBC,IAAnB,EAAwBC,GAAxB,EAA4BC,GAA5B,EAAgCC,MAAhC,QAA6C,iBAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMc,OAAO,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaF,OAAvB,CAA3B;AACA,QAAME,MAAM,GAAGF,OAAO,CAACG,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUT,UAAU,CAACU,QAAvC,CAAf;AACAC,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAW,oBAAmBf,KAAK,CAACgB,KAAN,CAAYC,MAAZ,CAAmBC,IAAK,EAAtD,CAAlB;AACAhB,MAAAA,aAAa,CAACW,GAAG,CAACM,IAAJ,CAASC,SAAV,CAAb;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVjB,MAAAA,QAAQ,CAAC,kBAAD,CAAR;AACH;AACJ,GAPQ,EAON,EAPM,CAAT;AAQA,sBACI,QAAC,MAAD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI,QAAC,SAAD;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAA,oBACKH,UADL,aACKA,UADL,gDACKA,UAAU,CAAEA,UADjB,0DACK,sBAAwBqB,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAA;;AAC1C,gCACI,QAAC,GAAD;AAAA,qCACI,QAAC,IAAD;AAAA,wCACI,QAAC,IAAD,CAAM,MAAN;AAAa,kBAAA,SAAS,EAAC,kBAAvB;AAAA,4BAA4CjB,MAA5C,aAA4CA,MAA5C,6CAA4CA,MAAM,CAAEkB,UAApD,uDAA2C,mBAAsBC,WAAtB;AAA3C;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,0CACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BAAYH,IAAI,CAACI,SAAL,CAAeD,WAAf;AAAZ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,eAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,oBADJ;AAYH,WAbA;AADL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CA3CD;;GAAMzB,S;UAGcD,W;;;KAHdC,S;AA6CN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Layout from '../../Components/Layout/Layout';\r\nimport { Container,Card,Row,Col,Button} from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ModelTest = (props) => {\r\n    const [modeltests, setModeltests] = useState({});\r\n    const [error, setError] = useState(\"\");\r\n    const courses = useSelector(state => state.course.courses);\r\n    const course = courses.find(x => x._id === modeltests.courseId);\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(`/get/model-tests/${props.match.params.slug}`);\r\n            setModeltests(res.data.modeltest);\r\n        } catch (err) {\r\n            setError(\"Something wrong!\");\r\n        }\r\n    }, []);\r\n    return (\r\n        <Layout>\r\n            <div className=\"mainDiv\">\r\n                <Container>\r\n                    <h1>All the model tests :</h1>\r\n                    <Row>\r\n                        {modeltests?.modeltests?.map((item, index) => {\r\n                            return (\r\n                                <Col key={index}>\r\n                                    <Card>\r\n                                        <Card.Header className=\"font-weight-bold\">{(course?.courseName)?.toUpperCase()}</Card.Header>\r\n                                        <Card.Body>\r\n                                            <Card.Text>{item.modelName.toUpperCase()}</Card.Text>\r\n                                            <Button variant=\"primary\">Start Exam</Button>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                            )\r\n                        })\r\n                        }\r\n                    </Row>\r\n\r\n                </Container>\r\n\r\n            </div>\r\n\r\n        </Layout>\r\n\r\n    );\r\n};\r\n\r\nexport default ModelTest;"]},"metadata":{},"sourceType":"module"}