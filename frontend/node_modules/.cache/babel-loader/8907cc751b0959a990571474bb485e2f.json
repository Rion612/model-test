{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study\\\\Project\\\\model-test\\\\frontend\\\\src\\\\Conatiner\\\\Question\\\\questions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../../Components/Layout/Layout';\nimport { useSelector } from 'react-redux';\nimport axios from '../../helpers/axios';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport { BiTime } from 'react-icons/bi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = props => {\n  _s();\n\n  var _modeltests$modeltest;\n\n  const [modeltests, setModeltests] = useState({});\n  const [error, setError] = useState(\"\");\n  const courses = useSelector(state => state.course.courses);\n  const course = courses.find(x => x._id === modeltests.courseId);\n  const [duration, setDuration] = useState(10);\n  const d = new Date();\n  useEffect(async () => {\n    try {\n      const res = await axios.get(`/get/model-tests/${props.match.params.slug}`);\n      setModeltests(res.data.modeltest);\n    } catch (err) {\n      setError(\"Something wrong!\");\n    }\n  }, []);\n  const modeltest = (_modeltests$modeltest = modeltests.modeltests) === null || _modeltests$modeltest === void 0 ? void 0 : _modeltests$modeltest.find(x => x._id === props.match.params.modelId);\n\n  function capitalize(str) {\n    return (str === null || str === void 0 ? void 0 : str.charAt(0).toUpperCase()) + (str === null || str === void 0 ? void 0 : str.slice(1));\n  }\n  /*\r\n  const startTimer = ()=>{\r\n      const countDowntime = Date.now() + 5400000;\r\n      setDuration(setInterval(()=>{\r\n          const now = new Date();\r\n          const distance = countDowntime - now;\r\n            const hour =Math.floor(distance / (60*60* 1000));\r\n          const distance = Math.floor(distance % (hour*3600000));\r\n            const minute = Math.floor(distance / (60*1000));\r\n            const s = Math.floor(distance % (minute*(60*1000)));\r\n        },1000))\r\n      }*/\n\n\n  setInterval(() => {\n    setDuration(1);\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [(modeltest === null || modeltest === void 0 ? void 0 : modeltest.modelName) ? capitalize(modeltest === null || modeltest === void 0 ? void 0 : modeltest.modelName) + ', ' : null, (course === null || course === void 0 ? void 0 : course.courseName) ? capitalize(course === null || course === void 0 ? void 0 : course.courseName) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(BiTime, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 55\n              }, this), \" Time: \", duration]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"text-right\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '20px'\n              },\n              children: \"Total marks: 100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Question, \"h4A8Cf4hYRYMVv5L84EZc92DKi4=\", false, function () {\n  return [useSelector];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["C:/Study/Project/model-test/frontend/src/Conatiner/Question/questions.js"],"names":["React","useState","useEffect","Layout","useSelector","axios","Row","Col","Container","BiTime","Question","props","modeltests","setModeltests","error","setError","courses","state","course","find","x","_id","courseId","duration","setDuration","d","Date","res","get","match","params","slug","data","modeltest","err","modelId","capitalize","str","charAt","toUpperCase","slice","setInterval","textAlign","modelName","courseName","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Layout from '../../Components/Layout/Layout';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from '../../helpers/axios';\r\nimport {Row,Col, Container} from 'react-bootstrap';\r\nimport { BiTime } from 'react-icons/bi'\r\n\r\n\r\n\r\nconst Question = (props) => {\r\n    const [modeltests, setModeltests] = useState({});\r\n    const [error, setError] = useState(\"\");\r\n    const courses = useSelector(state => state.course.courses);\r\n    const course = courses.find(x => x._id === modeltests.courseId);\r\n    const [duration ,setDuration] = useState(10);\r\n    const d = new Date();\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios.get(`/get/model-tests/${props.match.params.slug}`);\r\n            setModeltests(res.data.modeltest);\r\n        } catch (err) {\r\n            setError(\"Something wrong!\");\r\n        }\r\n    }, []);\r\n    const modeltest = modeltests.modeltests?.find(x => x._id === props.match.params.modelId);\r\n\r\n    function capitalize(str) {\r\n        return str?.charAt(0).toUpperCase() + str?.slice(1);\r\n    }\r\n    /*\r\n    const startTimer = ()=>{\r\n        const countDowntime = Date.now() + 5400000;\r\n        setDuration(setInterval(()=>{\r\n            const now = new Date();\r\n            const distance = countDowntime - now;\r\n\r\n            const hour =Math.floor(distance / (60*60* 1000));\r\n            const distance = Math.floor(distance % (hour*3600000));\r\n\r\n            const minute = Math.floor(distance / (60*1000));\r\n\r\n            const s = Math.floor(distance % (minute*(60*1000)));\r\n\r\n        },1000))\r\n\r\n\r\n    }*/\r\n    setInterval(()=>{\r\n        setDuration(1);\r\n\r\n    },1000)\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"mainDiv\">\r\n                <Container>\r\n                <h3 style={{ textAlign: 'center' }}>\r\n                {modeltest?.modelName ? capitalize(modeltest?.modelName) +', ': null}{course?.courseName ? capitalize(course?.courseName) : null}\r\n                </h3>\r\n                <Row>\r\n                    <Col><p style={{fontSize:'20px'}}><BiTime/> Time: {duration}</p></Col>\r\n                    <Col className=\"text-right\"><p style={{fontSize:'20px'}}>Total marks: 100</p></Col>\r\n                </Row>\r\n                <hr/>\r\n                </Container>\r\n\r\n            </div>\r\n\r\n        </Layout>\r\n\r\n    );\r\n};\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}